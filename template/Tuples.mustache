/*
 * Copyright 2024 Davide Maestroni
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
///////////////////////////////////////////////
// WARNING: GENERATED CODE - DO NOT MODIFY!! //
///////////////////////////////////////////////
package sparx.tuple;

import org.jetbrains.annotations.NotNull;
import sparx.util.Nothing;

public class Tuples {

  private Tuples() {
  }

  public static @NotNull Empty<Nothing> {{methodName}}() {
    return EmptyTuple.instance();
  }

  public static @NotNull <T> Single<T> {{methodName}}(final T first) {
    return new SingleTuple<T>(first);
  }
{{#tuples}}

  public static @NotNull <T, {{#indexes}}T{{value}} extends T{{^last}}, {{/last}}{{/indexes}}> {{name}}<T, {{#indexes}}T{{value}}{{^last}}, {{/last}}{{/indexes}}> {{methodName}}(
      {{#ordinals}}final T{{value.prevIndex}} {{value.prevName}}, {{#last}}final T{{value.index}} {{value.name}}{{/last}}{{/ordinals}}) {
    return new {{name}}Tuple<T, {{#indexes}}T{{value}}{{^last}}, {{/last}}{{/indexes}}>({{#ordinals}}{{value.prevName}}, {{#last}}{{value.name}}{{/last}}{{/ordinals}});
  }
{{/tuples}}
}
