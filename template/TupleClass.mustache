/*
* Copyright 2024 Davide Maestroni
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
////
// WARNING: GENERATED CODE - DO NOT MODIFY!!
////
package sparx.tuple;

import java.util.Arrays;

class {{name}}Tuple<T, {{#indexes}}T{{value}} extends T{{^last}}, {{/last}}{{/indexes}}> extends GenericTuple<T>
    implements {{name}}<T, {{#indexes}}T{{value}}{{^last}}, {{/last}}{{/indexes}}> {

{{#ordinals}}  private final T{{value.prevIndex}} {{value.prevName}};
{{#last}}  private final T{{value.index}} {{value.name}};
{{/last}}{{/ordinals}}

  {{name}}Tuple({{#ordinals}}final T{{value.prevIndex}} {{value.prevName}}, {{#last}}final T{{value.index}} {{value.name}}{{/last}}{{/ordinals}}) {
    super(Arrays.asList({{#ordinals}}{{value.prevName}}, {{#last}}{{value.name}}{{/last}}{{/ordinals}}));
{{#ordinals}}    this.{{value.prevName}} = {{value.prevName}};
{{#last}}    this.{{value.name}} = {{value.name}};
{{/last}}{{/ordinals}}
  }

{{#ordinals}}  @Override
  public T{{value.prevIndex}} get{{value.prevSuffix}}() {
    return {{value.prevName}};
  }

{{#last}}  @Override
  public T{{value.index}} get{{value.suffix}}() {
   return {{value.name}};
  }
{{/last}}{{/ordinals}}
}